https://kocoafab.cc/tutorial/view/656

https://gist.github.com/mariacarlinahernandez/6ec0da04dea7f436e63aa5dc67e6496a

https://help.ubidots.com/en/articles/791312-connect-an-intel-edison-to-ubidots-using-the-arduino-ide-over-http




#include <WiFi.h>
#include <SPI.h>

/********************************
 * Constants and objects
 *******************************/
/* Assigns the network parameters */
char* WIFI_SSID = "kitri_001_5G"; // your network WIFI_SSID (name)
char* WIFI_PASSWORD = "kitriadmin@"; // your network password

/* Assigns the Ubidots parameters */
char const * TOKEN = "BBFF-CSVTuy2iXCSsm633qf4s8D6u78qZxY"; // Assign your Ubidots TOKEN
char const * DEVICE_LABEL = "edison"; // Assign the unique device label 
char const * VARIABLE_LABEL_1 = "temperature"; // Assign the unique variable label to publish data to Ubidots (1) 
char const * VARIABLE_LABEL_2 = "humidity"; // Assign the unique variable label to publish data to Ubidots (2)
char const * VARIABLE_LABEL_3 = "pirsensor"; // Assign the unique variable label to publish data to Ubidots (3)

/* Parameters needed for the requests */
char const * USER_AGENT = "EDISON";
char const * VERSION = "1.0";
char const * SERVER = "things.ubidots.com";
int PORT = 80;
char topic[700];
char payload[300];

/* initialize the library instance */
WiFiClient client;

/********************************
 * Auxiliar Functions
 *******************************/

void SendToUbidots(char* payload) {

  int i = strlen(payload); 
  /* Builds the request POST - Please reference this link to know all the request's structures https://ubidots.com/docs/api/ */
  sprintf(topic, "POST /api/v1.6/devices/%s/?force=true HTTP/1.1\r\n", DEVICE_LABEL);
  sprintf(topic, "%sHost: things.ubidots.com\r\n", topic);
  sprintf(topic, "%sUser-Agent: %s/%s\r\n", topic, USER_AGENT, VERSION);
  sprintf(topic, "%sX-Auth-Token: %s\r\n", topic, TOKEN);
  sprintf(topic, "%sConnection: close\r\n", topic);
  sprintf(topic, "%sContent-Type: application/json\r\n", topic);
  sprintf(topic, "%sContent-Length: %d\r\n\r\n", topic, i);
  sprintf(topic, "%s%s\r\n", topic, payload);
  
  /* Connecting the client */
  client.connect(SERVER, PORT); 

  if (client.connected()) {
    /* Sends the request to the client */
    client.print(topic);
    Serial.println("Connected to Ubidots - POST");
  } else {
    Serial.println("Connection Failed ubidots - Try Again"); 
  }  
    
  /* Reads the response from the server */
  while (client.available()) {
    char c = client.read();
    //Serial.print(c); // Uncomment this line to visualize the response on the Serial Monitor
  }

  /* Disconnecting the client */
  client.stop();
}

/********************************
 * Main Functions
 *******************************/
 
void setup() {
  Serial.begin(115200);
  Serial.print("Connecting to ");
  Serial.println(WIFI_SSID); 
  /* Connects to AP */
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
    
  Serial.println(F("WiFi connected"));
  Serial.println(F("IP address: "));
  Serial.println(WiFi.localIP());
}

void loop() {
  /* Reads sensors values */
  float temperature = analogRead(A0);
  float humidity = analogRead(A1);
  float pirsensor = analogRead(A2);
  
  /* Builds the payload - {"temperature":25.00,"humidity":50.00} */
  sprintf(payload, "{\"");
  sprintf(payload, "%s%s\":%f", payload, VARIABLE_LABEL_1, temperature);
  sprintf(payload, "%s,\"%s\":%f", payload, VARIABLE_LABEL_2, humidity);
  sprintf(payload, "%s,\"%s\":%f", payload, VARIABLE_LABEL_3, pirsensor);
  sprintf(payload, "%s}", payload);
  
  /* Calls the Ubidots Function POST */
  SendToUbidots(payload);
  /* Prints the data posted on the Serial Monitor */
  Serial.println("Posting data to Ubidots");
  Serial.print("Temperature: ");
  Serial.println(temperature);
  Serial.print("Humidity: ");
  Serial.println(humidity);
  Serial.print("pirsensor: ");
  Serial.println(pirsensor);

  delay(5000); 
}



[IoT] Mqtt broker - Kafka - ELK 스택 셋팅
https://itzone.tistory.com/722

Using Logstash to index MQTT from Mosquitto
https://discuss.elastic.co/t/using-logstash-to-index-mqtt-from-mosquitto/161181

아두이노 - MQTT 사용하기
https://twinw.tistory.com/176

MQTT로 통신한 값 JSON을 사용해서 파싱 해보기
https://m.blog.naver.com/PostView.nhn?blogId=roboholic84&logNo=221238141049&proxyReferer=https%3A%2F%2Fwww.google.com%2F


https://midnightcow.tistory.com/36
https://itzone.tistory.com/722


노태상
nadream@gmail.com
010-9513-0422
